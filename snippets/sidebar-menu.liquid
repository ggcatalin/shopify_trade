<div class="sidebar-menu">
  <div class="sidebar-menu__header">
    <h2 class="sidebar-menu__title">Categories</h2>
  </div>

  <nav class="sidebar-menu__nav">
    {% assign categories = '' %}
    
    {% comment %}First, get all unique categories{% endcomment %}
    {% for collection in collections %}
      
      {% if  collection.metafields.custom.category != blank %}
        {% assign categories = categories | append: collection.metafields.custom.category | append: ',' %}
      {% endif %}
    {% endfor %}
    {% assign unique_categories = categories | split: ',' | uniq | sort %}
    
    {% comment %}Loop through unique categories{% endcomment %}
    {% for category in unique_categories %}
      <div class="sidebar-menu__category">
        <div class="sidebar-menu__category-header">
            {% if category == "Machine Parts" %}
                <a href="/pages/machine-parts" class="sidebar-menu__collection-link">{{ category }}</a>
            {% else %}
                <a href="/pages/torch-parts" class="sidebar-menu__collection-link">{{ category }}</a>
            {% endif %}
        </div>
        
        <div class="sidebar-menu__collections" >
          {% comment %}Get collections for this category{% endcomment %}
          {% assign sorted_collections = collections | sort: 'metafields.custom.category_order' %}
          {% for collection in sorted_collections %}
            {% if collection.metafields.custom.category == category %}

              <div class="sidebar-menu__collection" style="order: {{ collection.metafields.custom.category_order | default: 99 }};">
                {% if category == "Machine Parts" %}
                    <a href="{{ collection.url }}" class="sidebar-menu__collection-link">
                    {{ collection.title }}
                    </a>
                 {%else%}   
                    <span class="sidebar-menu__collection-title">{{ collection.title }}</span>
                {% endif %}
                <div class="sidebar-menu__products" >
                    {% assign sorted_products = collection.products | sort: 'metafields.custom.sort_order' %}
                    {% for product in sorted_products %}
                        {% unless product.metafields.custom.aftermarket %}
                            <a href="{{ product.url }}" class="sidebar-menu__product-link" style="order: {{ product.metafields.custom.sort_order | default: 99 }};">
                              {{ product.title }}
                            </a>
                         {%endunless%}   
                    {% endfor %}
                    {% assign has_aftermarket_products = false %}
                    {% for product in collection.products %}
                      {% if product.metafields.custom.aftermarket %}
                        {% assign has_aftermarket_products = true %}
                        {% break %}
                      {% endif %}
                    {% endfor %}
                    
                    {% if has_aftermarket_products %}
                      <div class="sidebar-menu__after-market-products" style="order: 100">
                        After Market
                        {% assign sorted_products = collection.products | sort: 'metafields.custom.sort_order' %}
                        {% for product in sorted_products %}
                          {% if product.metafields.custom.aftermarket %}
                            <a href="{{ product.url }}" class="sidebar-menu__product-link" style="order: {{ product.metafields.custom.sort_order | default: 99 }};">
                              {{ product.title }}
                            </a>
                          {% endif %}
                        {% endfor %}
                      </div>
                    {% endif %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  </nav>
</div>
{% style %}
  .sidebar-menu__collections,
.sidebar-menu__products,
.sidebar-menu__after-market-products {
  display: none;
}

.sidebar-menu__collections.active,
.sidebar-menu__products.active,
.sidebar-menu__after-market-products.active {
  display: flex;
  flex-direction: column;
}
{% endstyle %}
<script>
document.addEventListener("DOMContentLoaded", function () {
  // Accordion for category collections
  document.querySelectorAll(".sidebar-menu__category-header a").forEach((categoryLink) => {
    categoryLink.addEventListener("click", function (e) {
      e.preventDefault();

      const header = this.closest(".sidebar-menu__category-header");
      if (!header) return;

      const category = header.closest(".sidebar-menu__category");
      if (!category) return;

      const collections = category.querySelector(".sidebar-menu__collections");
      if (!collections) return;

      // Close all other active collections
      document.querySelectorAll(".sidebar-menu__collections.active").forEach((el) => {
        if (el !== collections) el.classList.remove("active");
      });

      // Toggle current
      collections.classList.toggle("active");
    });
  });

  // Accordion for collection products
  document.querySelectorAll(".sidebar-menu__collection-link").forEach((collectionLink) => {
    collectionLink.addEventListener("click", function (e) {
      const collection = this.closest(".sidebar-menu__collection");
      if (!collection) return;

      const products = collection.querySelector(".sidebar-menu__products");
      if (!products || products.children.length === 0) return;

      e.preventDefault(); // Only toggle if there are products

      // Close all other active product lists in the same category
      const allProducts = collection.parentElement.querySelectorAll(".sidebar-menu__products.active");
      allProducts.forEach((el) => {
        if (el !== products) el.classList.remove("active");
      });

      // Toggle current
      products.classList.toggle("active");
    });
  });

  // Optional: Aftermarket toggle (does not auto-close others)
  document.querySelectorAll(".sidebar-menu__after-market-products").forEach((afterMarket) => {
    const parent = afterMarket.parentElement;
    const toggleBtn = document.createElement("button");
    toggleBtn.textContent = "Toggle Aftermarket";
    toggleBtn.classList.add("aftermarket-toggle");
    toggleBtn.addEventListener("click", () => {
      afterMarket.classList.toggle("active");
    });
    parent.insertBefore(toggleBtn, afterMarket);
  });
});
</script>